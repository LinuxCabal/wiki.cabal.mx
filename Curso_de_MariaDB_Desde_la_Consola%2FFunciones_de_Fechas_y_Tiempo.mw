__NOTOC__
* [[:#Funciones de Fechas y Tiempo | Funciones de Fechas y Tiempo]]
* [[:#Intervaal | Interval]]
* [[:#DATE_ADD ADDDATE | DATE_ADD ADDDATE]]
* [[:#ADDTIME | ADDTIME]]
* [[:#CONVERT_TZ | CONVERT_TZ]]
* []:#NOW | NOW]]
* [[:#CURDATE | CURDATE y CURRENT_DATE]]
* [[:#CURTIME | CURTIME y CURRENT_TIME]]
* [[:#DATE | DATE]]
* [[:#DATEDIFF | DATEDIFF]]
* [[:#DATE_FORMAT | DATE_FORMAT]]

= Funciones de Fechas y Tiempo =
== Interval ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

El directivo INTERVAL se puede utilizar para añadir o restar un 
intervalo de tiempo a un DATETIME, DATE o TIME valor.
La sintaxis es: 

INTERVAL time_quantity Time_unit

MariaDB [(none)]> SELECT '2015-10-21 12:15:30' +  INTERVAL 4 day;
+-----------------------------------------+
| '2015-10-21 12:15:30' +  INTERVAL 4 day |
+-----------------------------------------+
| 2015-10-25 12:15:30                     |
+-----------------------------------------+
1 row in set (0.01 sec)

MariaDB [(none)]> SELECT '2014-05-17 08:44:21' - INTERVAL '7 1' DAY_HOUR;
+-------------------------------------------------+
| '2014-05-17 08:44:21' - INTERVAL '7 1' DAY_HOUR |
+-------------------------------------------------+
| 2014-05-10 07:44:21                             |
+-------------------------------------------------+
1 row in set (0.00 sec)

Las siguientes unidades son válidas:

</syntaxhighlight>

<table border=1 cellpadding=3>
  <tr>
    <th style="text-align:left;">Undad</th>
    <th style="text-align:left;">Descripción</th>
  </tr>
  <tr>
    <td><code>MICROSECOND</code></td>
    <td>Microseconds</td>
  </tr>
  <tr>
    <td><code>SECOND</code></td>
    <td>Seconds</td>
  </tr>
  <tr>
    <td><code>MINUTE</code></td>
    <td>Minutes</td>
  </tr>
  <tr>
    <td><code>HOUR</code></td>
    <td>Hours</td>
  </tr>
  <tr>
    <td><code>DAY</code></td>
    <td>Days</td>
  </tr>
  <tr>
    <td><code>WEEK</code></td>
    <td>Weeks</td>
  </tr>
  <tr>
    <td><code>MONTH</code></td>
    <td>Months</td>
  </tr>
  <tr>
    <td><code>QUARTER</code></td>
    <td>Quarters</td>
  </tr>
  <tr>
    <td><code>YEAR</code></td><td>Years</td>
  </tr>
  <tr>
    <td><code>SECOND_MICROSECOND</code></td><td>Seconds.Microseconds</td>
  </tr>
  <tr>
    <td><code>MINUTE_MICROSECOND</code></td><td>Minutes.Seconds.Microseconds</td>
  </tr>
  <tr>
    <td><code>MINUTE_SECOND</code></td><td>Minutes.Seconds</td>
  </tr>
  <tr>
    <td><code>HOUR_MICROSECOND</code></td><td>Hours.Minutes.Seconds.Microseconds</td>
  </tr>
  <tr>
    <td><code>HOUR_SECOND</code></td><td>Hours.Minutes.Seconds</td>
  </tr>
  <tr>
    <td><code>HOUR_MINUTE</code></td><td>Hours.Minutes</td>
  </tr>
  <tr>
    <td><code>DAY_MICROSECOND</code></td><td>Days Hours.Minutes.Seconds.Microseconds</td>
  </tr>
  <tr>
    <td><code>DAY_SECOND</code></td><td>Days Hours.Minutes.Seconds</td>
  </tr>
  <tr>
    <td><code>DAY_MINUTE</code></td><td>Days Hours.Minutes</td>
  </tr>
  <tr>
    <td><code>DAY_HOUR</code></td><td>Days Hours</td>
  </tr>
  <tr>
    <td><code>YEAR_MONTH</code></td><td>Years-Months</td>
  </tr>
</table>

== DATE_ADD ADDDATE ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

Cuando se invoca con la forma INTERVAL del segundo argumento, ADDDATE () 
es sinónimo de DATE_ADD (). Cuando se invoca con la forma DAY del segundo 
argumento, MariaDB lo trata como un número entero de días a añadir a expr.

MariaDB [(none)]> SELECT DATE_ADD('2015-10-25', INTERVAL 31 DAY);
+-----------------------------------------+
| DATE_ADD('2015-10-25', INTERVAL 31 DAY) |
+-----------------------------------------+
| 2015-11-25                              |
+-----------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> SELECT ADDDATE('2015-10-25', INTERVAL 31 DAY);
+----------------------------------------+
| ADDDATE('2015-10-25', INTERVAL 31 DAY) |
+----------------------------------------+
| 2015-11-25                             |
+----------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> SELECT ADDDATE('2015-10-25', 31);
+---------------------------+
| ADDDATE('2015-10-25', 31) |
+---------------------------+
| 2015-11-25                |
+---------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> use Prueba1
Database changed

MariaDB [Prueba1]> CREATE TABLE t1 (d DATETIME);
Query OK, 0 rows affected (0.25 sec)

MariaDB [Prueba1]> INSERT INTO t1 VALUES
    ->     ("2007-01-30 21:31:07"),
    ->     ("1983-10-15 06:42:51"),
    ->     ("2011-04-21 12:34:56"),
    ->     ("2011-10-30 06:31:41"),
    ->     ("2011-01-30 14:03:25"),
    ->     ("2004-10-07 11:19:34");
Query OK, 6 rows affected (0.08 sec)
Records: 6  Duplicates: 0  Warnings: 0

MariaDB [Prueba1]> SELECT d, ADDDATE(d, 10) from t1;
+---------------------+---------------------+
| d                   | ADDDATE(d, 10)      |
+---------------------+---------------------+
| 2007-01-30 21:31:07 | 2007-02-09 21:31:07 |
| 1983-10-15 06:42:51 | 1983-10-25 06:42:51 |
| 2011-04-21 12:34:56 | 2011-05-01 12:34:56 |
| 2011-10-30 06:31:41 | 2011-11-09 06:31:41 |
| 2011-01-30 14:03:25 | 2011-02-09 14:03:25 |
| 2004-10-07 11:19:34 | 2004-10-17 11:19:34 |
+---------------------+---------------------+
6 rows in set (0.01 sec)

MariaDB [Prueba1]> SELECT d, ADDDATE(d, INTERVAL 10 HOUR) from t1;
+---------------------+------------------------------+
| d                   | ADDDATE(d, INTERVAL 10 HOUR) |
+---------------------+------------------------------+
| 2007-01-30 21:31:07 | 2007-01-31 07:31:07          |
| 1983-10-15 06:42:51 | 1983-10-15 16:42:51          |
| 2011-04-21 12:34:56 | 2011-04-21 22:34:56          |
| 2011-10-30 06:31:41 | 2011-10-30 16:31:41          |
| 2011-01-30 14:03:25 | 2011-01-31 00:03:25          |
| 2004-10-07 11:19:34 | 2004-10-07 21:19:34          |
+---------------------+------------------------------+
6 rows in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_ADD('2015-12-31 23:59:59', INTERVAL 1 SECOND);
+----------------------------------------------------+
| DATE_ADD('2015-12-31 23:59:59', INTERVAL 1 SECOND) |
+----------------------------------------------------+
| 2016-01-01 00:00:00                                |
+----------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_ADD('1900-01-01 00:00:00', INTERVAL '-1 10' DAY_HOUR);
+------------------------------------------------------------+
| DATE_ADD('1900-01-01 00:00:00', INTERVAL '-1 10' DAY_HOUR) |
+------------------------------------------------------------+
| 1899-12-30 14:00:00                                        |
+------------------------------------------------------------+
1 row in set (0.00 sec)

</syntaxhighlight>

== ADDTIME ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

ADDTIME(expr1,expr2)

ADDTIME () añade expr2 a expr1 y devuelve el resultado. 
expr1 es una expresión de tiempo o de fecha y hora, y 
expr2 es una expresión de tiempo.

MariaDB [Prueba1]> SELECT ADDTIME('2007-12-31 23:59:59.999999', '1 1:1:1.000002');
+---------------------------------------------------------+
| ADDTIME('2007-12-31 23:59:59.999999', '1 1:1:1.000002') |
+---------------------------------------------------------+
| 2008-01-02 01:01:01.000001                              |
+---------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT ADDTIME('01:00:00.999999', '02:00:00.999998');
+-----------------------------------------------+
| ADDTIME('01:00:00.999999', '02:00:00.999998') |
+-----------------------------------------------+
| 03:00:01.999997                               |
+-----------------------------------------------+
1 row in set (0.00 sec)

</syntaxhighlight>

== CONVERT_TZ ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

CONVERT_TZ(dt,from_tz,to_tz)

CONVERT_TZ () convierte un valor datetime dt de la zona de tiempo dado por from_tz 
a la zona horaria dada por to_tz y devuelve el valor resultante. Esta función 
devuelve NULL si los argumentos no son válidos.

MariaDB [Prueba1]> SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','+10:00');
+-----------------------------------------------------+
| CONVERT_TZ('2004-01-01 12:00:00','+00:00','+10:00') |
+-----------------------------------------------------+
| 2004-01-01 22:00:00                                 |
+-----------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','CDT');
+--------------------------------------------------+
| CONVERT_TZ('2004-01-01 12:00:00','+00:00','CDT') |
+--------------------------------------------------+
| NULL                                             |
+--------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','+CDT');
+---------------------------------------------------+
| CONVERT_TZ('2004-01-01 12:00:00','+00:00','+CDT') |
+---------------------------------------------------+
| NULL                                              |
+---------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT CONVERT_TZ('2004-01-01 12:00:00','+00:00','CST');
+--------------------------------------------------+
| CONVERT_TZ('2004-01-01 12:00:00','+00:00','CST') |
+--------------------------------------------------+
| NULL                                             |
+--------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT CONVERT_TZ('2004-01-01 12:00:00','-6:00','+4:00');
+---------------------------------------------------+
| CONVERT_TZ('2004-01-01 12:00:00','-6:00','+4:00') |
+---------------------------------------------------+
| 2004-01-01 22:00:00                               |
+---------------------------------------------------+
1 row in set (0.00 sec)

</syntaxhighlight>

== NOW ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

NOW(), CURRENT_TIMESTAMP, CURRENT_TIMESTAMP(),
LOCALTIME, LOCALTIME(), LOCALTIMESTAMP, LOCALTIMESTAMP()

Devuelve la fecha y la hora actual como valor en formato 'YYYY-MM-DD HH: MM: SS' 
o el formato YYYYMMDDHHMMSS.uuuuuu, dependiendo de si la función se utiliza en 
una cadena o contexto numérico. El valor se expresa en la zona horaria actual.

NOW () (o sus sinónimos) se puede usar como el valor predeterminado para columnas 
TIMESTAMP, así como, desde MariaDB 10.0.1, columnas DATETIME. Antes MariaDB 10,0.1, 
sólo era posible que una sola columna TIMESTAMP por mesa para contener 
la CURRENT_TIMESTAMP como su defecto.

LOCALTIME and LOCALTIME() are synonyms for NOW().
LOCALTIMESTAMP and LOCALTIMESTAMP() are synonyms for NOW().
CURRENT_TIMESTAMP and CURRENT_TIMESTAMP() are synonyms for NOW().

MariaDB [(none)]> SELECT NOW();
+---------------------+
| NOW()               |
+---------------------+
| 2015-10-27 18:07:00 |
+---------------------+
1 row in set (0.01 sec)

MariaDB [(none)]> SELECT NOW() + 0;
+----------------+
| NOW() + 0      |
+----------------+
| 20151027180709 |
+----------------+
1 row in set (0.02 sec)

</syntaxhighlight>

== CURDATE ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

CURDATE()

Devuelve la fecha actual como valor en formato 'YYYY-MM-DD' 
o el formato AAAAMMDD, dependiendo de si la función se utiliza 
en una cadena o contexto numérico.

CURRENT_DATE y CURRENT_DATE () son sinónimos de CURDATE ().

MariaDB [Prueba1]> SELECT CURDATE();
+------------+
| CURDATE()  |
+------------+
| 2015-10-26 |
+------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT CURDATE() + 50;
+----------------+
| CURDATE() + 50 |
+----------------+
|       20151076 |
+----------------+
1 row in set (0.00 sec)

</syntaxhighlight>

== CURTIME ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

CURTIME()

Devuelve la hora actual como un valor en 'HH: MM: SS' o el formato HHMMSS.uuuuuu, 
dependiendo de si la función se utiliza en una cadena o contexto numérico. 
El valor se expresa en la zona horaria actual.

CURRENT_TIME y CURRENT_TIME () son sinónimos de CURTIME ().

MariaDB [Prueba1]> SELECT CURTIME();
+-----------+
| CURTIME() |
+-----------+
| 23:36:26  |
+-----------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT CURTIME() + 55;
+----------------+
| CURTIME() + 55 |
+----------------+
|         233693 |
+----------------+
1 row in set (0.00 sec)

</syntaxhighlight>

== DATE ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

DATE( expr )

Extrae la parte de fecha de la fecha o la fecha y hora expresión expr.

Hasta MariaDB 05/05/32, algunas versiones de MariaDB regresaron 0000-00-00 
cuando se pasa una fecha no válida. Desde 05/05/32, NULL se devuelve.

MariaDB [Prueba1]> SELECT DATE('2015-10-25 12:21:32');
+-----------------------------+
| DATE('2015-10-25 12:21:32') |
+-----------------------------+
| 2015-10-25                  |
+-----------------------------+
1 row in set (0.00 sec)

</syntaxhighlight>

== DATEDIFF ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

DATEDIFF(expr1,expr2)

DATEDIFF () devuelve (Expr1 - expr2) expresados como un valor en días 
de una fecha a la otra. expr1 y expr2 son de fecha o de expresiones DATE y tiempo 
de expresiones. Sólo las partes de fecha de los valores se utilizan en el cálculo.

MariaDB [Prueba1]> SELECT DATEDIFF('2007-12-31 23:59:59','2007-12-30');
+----------------------------------------------+
| DATEDIFF('2007-12-31 23:59:59','2007-12-30') |
+----------------------------------------------+
|                                            1 |
+----------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATEDIFF('2010-11-30 23:59:59','2010-12-31');
+----------------------------------------------+
| DATEDIFF('2010-11-30 23:59:59','2010-12-31') |
+----------------------------------------------+
|                                          -31 |
+----------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> CREATE TABLE t2 (d DATETIME);
Query OK, 0 rows affected (0.23 sec)

MariaDB [Prueba1]> INSERT INTO t2 values
           ("2007-01-30 21:31:07"),
           ("1983-10-15 06:42:51"),
           ("2011-04-21 12:34:56"),
           ("2011-10-30 06:31:41"),
           ("2011-01-30 14:03:25"),
           ("2004-10-07 11:19:34");
Query OK, 6 rows affected (0.04 sec)
Records: 6  Duplicates: 0  Warnings: 0

MariaDB [Prueba1]> SELECT NOW();
+---------------------+
| NOW()               |
+---------------------+
| 2015-10-26 23:59:32 |
+---------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT d, DATEDIFF(NOW(),d) FROM t2;
+---------------------+-------------------+
| d                   | DATEDIFF(NOW(),d) |
+---------------------+-------------------+
| 2007-01-30 21:31:07 |              3191 |
| 1983-10-15 06:42:51 |             11699 |
| 2011-04-21 12:34:56 |              1649 |
| 2011-10-30 06:31:41 |              1457 |
| 2011-01-30 14:03:25 |              1730 |
| 2004-10-07 11:19:34 |              4036 |
+---------------------+-------------------+
6 rows in set (0.00 sec)

</syntaxhighlight>

== DATE_FORMAT ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

DATE_FORMAT(date,format)

Formatea el valor de DATE de acuerdo a la cadena de formato. 
El lenguaje utilizado para los nombres es controlado por el valor 
de la variable de sistema lc_time_names. Ver la configuración 
regional del servidor para más información sobre los entornos 
locales soportados. Las opciones que se pueden utilizar por 
DATE_FORMAT(), así como su inversa STR_TO_DATE() y el 

MariaDB [Prueba1]> SELECT DATE_FORMAT('2009-10-04 22:23:00', '%W %M %Y');
+------------------------------------------------+
| DATE_FORMAT('2009-10-04 22:23:00', '%W %M %Y') |
+------------------------------------------------+
| Sunday October 2009                            |
+------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_FORMAT('2007-10-04 22:23:00', '%H:%i:%s');
+------------------------------------------------+
| DATE_FORMAT('2007-10-04 22:23:00', '%H:%i:%s') |
+------------------------------------------------+
| 22:23:00                                       |
+------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_FORMAT('1900-10-04 22:23:00', '%D %y %a %d %m %b %j');
+------------------------------------------------------------+
| DATE_FORMAT('1900-10-04 22:23:00', '%D %y %a %d %m %b %j') |
+------------------------------------------------------------+
| 4th 00 Thu 04 10 Oct 277                                   |
+------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_FORMAT('1997-10-04 22:23:00', '%H %k %I %r %T %S %w');
+------------------------------------------------------------+
| DATE_FORMAT('1997-10-04 22:23:00', '%H %k %I %r %T %S %w') |
+------------------------------------------------------------+
| 22 22 10 10:23:00 PM 22:23:00 00 6                         |
+------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_FORMAT('1999-01-01', '%X %V');
+------------------------------------+
| DATE_FORMAT('1999-01-01', '%X %V') |
+------------------------------------+
| 1998 52                            |
+------------------------------------+
1 row in set (0.00 sec)

MariaDB [Prueba1]> SELECT DATE_FORMAT('2006-06-00', '%d');
+---------------------------------+
| DATE_FORMAT('2006-06-00', '%d') |
+---------------------------------+
| 00                              |
+---------------------------------+
1 row in set (0.00 sec)

lc_time_names

La configuración regional que determina el idioma utilizado para la fecha 
y hora funciones DAYNAME (), MONTHNAME () y DATE_FORMAT (). Nombres Locale 
son de idioma y región subetiquetas, por ejemplo 'en_ZA' (Inglés - Sudáfrica) 
o 'es_US: Español - Estados Unidos'. El valor por defecto es siempre "en-US",
independientemente de la configuración regional del sistema. Ver la 
configuración regional del servidor para obtener una lista completa de 
los entornos locales soportados. 

FROM_UNIXTIME() función, son los siguientes:

</syntaxhighlight>

<table border=1>
  <tr>
    <th>Option</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>%D</code></td>
    <td>Day with English suffix 'th', 'nd', 'st' or 'rd''. (1st, 2nd, 3rd...).</td>
  </tr>
  <tr>
    <td><code>%H</code></td>
    <td>Hour with 2 digits between 00-23.</td>
  </tr>
  <tr>
    <td><code>%I</code></td>
    <td>Hour with 2 digits between 01-12.</td>
  </tr>
  <tr>
    <td><code>%M</code></td>
    <td>Full month name in current locale (Variable lc_time_names).</td>
  </tr>
  <tr>
    <td><code>%S</code></td>
    <td>Seconds with 2 digits.</td>
  </tr>
  <tr>
    <td><code>%T</code></td>
    <td>Time in 24 hour format. Short for '%H:%i:%S'.</td>
  </tr>
  <tr>
    <td><code>%U</code></td>
    <td>Week number (00-53), when first day of the week is Sunday.</td>
  </tr>
  <tr>
    <td><code>%V</code></td>
    <td>Week number (01-53), when first day of the week is Sunday. Used with %X.</td>
  </tr>
  <tr>
    <td><code>%W</code></td>
    <td>Full weekday name in current locale (Variable lc_time_names).</td>
  </tr>
  <tr>
    <td><code>%X</code></td>
    <td>Year with 4 digits when first day of the week is Sunday. Used with %V.</td>
  </tr>
  <tr>
    <td><code>%Y</code></td>
    <td>Year with 4 digits.</td>
  </tr>
  <tr>
    <td><code>%a</code></td>
    <td>Short weekday name in current locale (Variable lc_time_names).</td>
  </tr>
  <tr>
    <td><code>%b</code></td>
    <td>Short form month name in current locale. For locale en_US this is one of: Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov or Dec.</td>
  </tr>
  <tr>
    <td><code>%c</code></td>
    <td>Month with 1 or 2 digits.</td>
  </tr>
  <tr>
    <td><code>%d</code></td>
    <td>Day with 2 digits.</td>
  </tr>
  <tr>
    <td><code>%e</code></td>
    <td>Day with 1 or 2 digits.</td>
  </tr>
  <tr>
    <td><code>%f</code></td>
    <td>Sub seconds 6 digits.</td>
  </tr>
  <tr>
    <td><code>%h</code></td>
    <td>Hour with 2 digits between 01-12.</td>
  </tr>
  <tr>
    <td><code>%i</code></td>
    <td>Minute with 2 digits</td>
  </tr>
  <tr>
    <td><code>%j</code></td>
    <td>Day of the year (001-366)</td>
  </tr>
  <tr>
    <td><code>%k</code></td>
    <td>Hour with 1 digits between 0-23.</td>
  </tr>
  <tr>
    <td><code>%l</code></td>
    <td>Hour with 1 digits between 1-12.</td>
  </tr>
  <tr>
    <td><code>%m</code></td>
    <td>Month with 2 digits.</td>
  </tr>
  <tr>
    <td><code>%p</code></td>
    <td>AM/PM according to current locale (Variable lc_time_names).</td>
  </tr>
  <tr>
    <td><code>%r</code></td>
    <td>Time in 12 hour format, followed by AM/PM. Short for '%I:%i:%S %p'.</td>
  </tr>
  <tr>
    <td><code>%s</code></td>
    <td>Seconds with 2 digits.</td>
  </tr>
  <tr>
    <td><code>%u</code></td>
    <td>Week number (00-53), when first day of the week is Monday.</td>
  </tr>
  <tr>
    <td><code>%v</code></td>
    <td>Week number (01-53), when first day of the week is Monday. Used with %x.</td>
  </tr>
  <tr>
    <td><code>%w</code></td>
    <td>Day of the week. 0 = Sunday, 1 = Saturday.</td>
  </tr>
  <tr>
    <td><code>%x</code></td>
    <td>Year with 4 digits when first day of the week is Sunday. Used with %v.</td>
  </tr>
  <tr>
    <td><code>%y</code></td>
    <td>Year with 2 digits.</td>
  </tr>
  <tr>
    <td><code>#</code></td>
    <td>For str_to_date(), skip all numbers.</td>
  </tr>
  <tr>
    <td><code>.</code></td>
    <td>For str_to_date(), skip all punctation characters.</td>
  </tr>
  <tr>
    <td><code>@</code></td>
    <td>For str_to_date(), skip all alpha characters.</td>
  </tr>
  <tr>
    <td><code>%%</code></td>
    <td>A literal <code>%</code> character.</td>
  </tr>
</table>


[[Category:MariaDB Desde la Consola]]
[[Category: CursoMatiaDB]]
