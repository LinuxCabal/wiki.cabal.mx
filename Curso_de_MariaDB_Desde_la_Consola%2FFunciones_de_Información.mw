__NOTOC__
* [[:#Funciones de Información | Funciones de Información]]
* [[:#BENCHMARK | BENCHMARK]]
* [[:#CHARSET | CHARSET]]
* [[:#COLLATION | COLLATION]]
* [[:#CONNECTION_ID | CONNECTION_ID]]
* [[:#CURRENT_USER | CURRENT_USER]]
* [[:#DATABASE | DATABASE]]
* [[:#FOUND_ROWS | FOUND_ROWS]]
* [[:#LAST_INSERT_ID | LAST_INSERT_ID]]
* [[:#ROW_COUNT | ROW_COUNT]]
* [[:#SCHEMA | SCHEMA]]
* [[:#SESSION_USER | SESSION_USER]]
* [[:#USER | USER]]
* [[:#VERSION | VERSION]]

= Funciones de Información =

== BENCHMARK ==

 <b>Syntax:</b>
 
 BENCHMARK( count, expr )
 
 <b>Descripción;</b>
 
 La función BENCHMARK() ejecuta la expresión expr repetidamente count veces.
 Se puede utilizar en cuando la rapidez MariaDB procesa la expresión. 
 El valor del resultado es siempre 0. El uso previsto es desde el cliente de MySQL,
 que informa de los tiempos de ejecución de la consulta.
 
 <b>Ejemplo;</b>
 
 MariaDB [(none)]> SELECT BENCHMARK( 500000, MD5( "La frase que vamos encryptar" ) );
 +------------------------------------------------------------+
 | BENCHMARK( 500000, MD5( "La frase que vamos encryptar" ) ) |
 +------------------------------------------------------------+
 |                                                          0 |
 +------------------------------------------------------------+
 1 row in set (0.23 sec)

== CHARSET ==

 <b>Syntax:</b>
 
 CHARSET( str )
 
 <b>Descripción;</b>
 
 Devuelve el conjunto de caracteres del argumento de cadena.
 Si str no es una cadena, se considera como una cadena binaria
 (por lo que se devuelve la función binaria ''). 
 Esto se aplica a NULL, también.
 El valor de retorno es una cadena en el conjunto de caracteres UTF-8.
 
 <b>Ejemplos;</b>
 
 MariaDB [(none)]> SELECT CHARSET( 'El DEFAUT del sistema' );
 +------------------------------------+
 | CHARSET( 'El DEFAUT del sistema' ) |
 +------------------------------------+
 | utf8                               |
 +------------------------------------+
 1 row in set (0.00 sec)
 
 
 MariaDB [(none)]> SELECT CHARSET( CONVERT( 'también' USING latin1 ) );
 +-----------------------------------------------+
 | CHARSET( CONVERT( 'también' USING latin1 ) )  |
 +-----------------------------------------------+
 | latin1                                        |
 +-----------------------------------------------+
 1 row in set (0.00 sec)

== COLLATION ==

 <b>Syntax:</b>
 
 COLLATION( str )
 
 <b>Descripción;</b>
 
 Devuelve la colation de la cadena. Si str no es una cadena, se considera como una cadena binaria
 (por lo que se devuelve la función binaria '').
 Esto se aplica a NULL, también. 
 El valor de retorno es una cadena en el conjunto de caracteres UTF-8.
 
 <b>Ejemplos;</b>
 
 MariaDB [(none)]> SELECT COLLATION( 'El default de nuesto sistema' );
 +--------------------------------------------+
 | COLLATION( 'El default de nuesto sistema' ) |
 +--------------------------------------------+
 | utf8_general_ci                            |
 +--------------------------------------------+
 1 row in set (0.00 sec)
 
 MariaDB [(none)]> SELECT COLLATION( _latin1 'abc' );
 +----------------------------+
 | COLLATION( _latin1 'abc' ) |
 +----------------------------+
 | latin1_swedish_ci          |
 +----------------------------+
 1 row in set (0.00 sec)
 
== CONNECTION_ID ==

 <b>Syntax:</b>
 
 CONNECTION_ID()
 
 <b>Descripción;</b>
 Devuelve el identificador de conexión (ID del hilo) para la conexión.
 Cada hilo (incluyendo eventos) tiene un identificador que es único 
 entre el conjunto de clientes conectados actualmente.
 
 <b>Ejemplo;</b>
 
 MariaDB [(none)]> SELECT CONNECTION_ID();
 +-----------------+
 | CONNECTION_ID() |
 +-----------------+
 |               4 |
 +-----------------+
 1 row in set (0.00 sec)

== CURRENT_USER ==

 <b>Syntax:</b>
 
 CURRENT_USER, CURRENT_USER()
 
 <b>Descripción;</b>
 
 Devuelve el nombre de usuario y nombre de host de la cuenta en MariaDB
 que el servidor utiliza para autenticar el cliente actual. Esta cuenta 
 determina sus privilegios de acceso. 
 El valor de retorno es una cadena en el conjunto de caracteres UTF-8.
 
 El valor de CURRENT_USER() puede ser diferente del valor de USER(). 
 CURRENT_ROLE() devuelve el role activo actual. (Nuevo en 10.0.5)
 
 <b>Ejemplos;</b>
 
 MariaDB [(none)]> SELECT CURRENT_USER, CURRENT_USER();
 +---------------+----------------+
 | CURRENT_USER  | CURRENT_USER() |
 +---------------+----------------+
 | rrc@localhost | rrc@localhost  |
 +---------------+----------------+
 1 row in set (0.00 sec)
 
 MariaDB [(none)]> select user(),current_user();
 +---------------+----------------+
 | user()        | current_user() |
 +---------------+----------------+
 | rrc@localhost | rrc@localhost  |
 +---------------+----------------+
 1 row in set (0.00 sec)
 
 MariaDB [(none)]> SELECT CURRENT_USER, CURRENT_USER(), CURRENT_ROLE();
 +---------------+----------------+----------------+
 | CURRENT_USER  | CURRENT_USER() | CURRENT_ROLE() |
 +---------------+----------------+----------------+
 | rrc@localhost | rrc@localhost  | NULL           |
 +---------------+----------------+----------------+
 1 row in set (0.00 sec)
 
 MariaDB [mysql]> SELECT * FROM INFORMATION_SCHEMA.ENABLED_ROLES;
 +-----------+
 | ROLE_NAME |
 +-----------+
 | NULL      |
 +-----------+
 1 row in set (0.00 sec)

== DATABASE ==

 <b>Syntax:</b>
 
 DATABASE()
 
 <b>Descripción;</b>
 
 Devuelve el valor del Nombre de la base de datos seleccionada 
 como una cadena en el conjunt de caracteres UTF-8. Si no hay 
 una base de datos predeterminada, BASE DE DATOS() devuelve NULL. 
 Dentro de una rutina almacenada, la base de datos por defecto es 
 la base de datos que la rutina se asocia con, que no es necesariamente 
 la misma que la base de datos que es el valor predeterminado en el 
 contexto de llamada.
 
 Para seleccionar una base de datos por defecto, la sentencia USE se 
 puede ejecutar. Otra forma de establecer la base de datos por defecto 
 está especificando su nombre al iniciar el cliente de línea de 
 comandos mysql.
 
 <b>Ejemplos;</b>
 
 MariaDB [(none)]> SELECT DATABASE();
 +------------+
 | DATABASE() |
 +------------+
 | NULL       |
 +------------+
 1 row in set (0.00 sec)
 
 MariaDB [(none)]> use Prueba1;
 Database changed
 MariaDB [Prueba1]> SELECT DATABASE();
 +------------+
 | DATABASE() |
 +------------+
 | Prueba1    |
 +------------+
 1 row in set (0.00 sec)

== FOUND_ROWS ==

 <b>Syntax:</b>
 
 FOUND_ROWS()
 
 <b>Descripción;</b>
 
 Una instrucción SELECT puede incluir una cláusula LIMIT para restringir el número de filas el servidor
 devuelve al cliente. En algunos casos, es deseable saber cuántos registros habría retornado el comando
 sin el límite, pero sin correr el comunicado de nuevo. Para obtener este número de filas, incluir una
 opción SQL_CALC_FOUND_ROWS en la instrucción SELECT, y luego invocar FOUND_ROWS () después.
 
 También puede utilizar FOUND_ROWS () para obtener el número de filas devueltas por una instrucción SELECT
 que no contienen una cláusula LIMIT. En este caso no es necesario utilizar la opción SQL_CALC_FOUND_ROWS.
 Esto puede ser útil por ejemplo en un procedimiento almacenado.
 
 Además, esta función trabaja con algunas otras declaraciones que devuelven un conjunto de resultados,
 incluyendo SHOW, DESC y ayuda. Para ELIMINAR ... Volviendo se debe utilizar ROW_COUNT (). También funciona
 como una declaración preparada, o después de la ejecución de una declaración preparada.
 
 Declaraciones que no devuelven ningún resultado no afectan FOUND_ROWS () - todavía será devuelto el valor anterior.
 
 Advertencia: Cuando se utiliza después de una sentencia CALL, esta función devuelve el número de filas
 seleccionadas por la última consulta en el procedimiento, no por la totalidad del procedimiento.
 
 Declaraciones Uso de la función () FOUND_ROWS no son seguros para la replicación.
 
 <b>Ejemplos;</b>
 
 MariaDB [(none)]> show engines;
 +--------------------+---------+----------------------------------------------------------------------------+
 | Engine             | Support | Comment                                                                    |
 +--------------------+---------+----------------------------------------------------------------------------+
 | CSV                | YES     | CSV storage engine                                                         |
 | MRG_MyISAM         | YES     | Collection of identical MyISAM tables                                      |
 | MyISAM             | YES     | MyISAM storage engine                                                      |
 | BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears)             |
 | PERFORMANCE_SCHEMA | YES     | Performance Schema                                                         |
 | MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables                  |
 | ARCHIVE            | YES     | Archive storage engine                                                     |
 | Aria               | YES     | Crash-safe tables with MyISAM heritage                                     |
 | FEDERATED          | YES     | FederatedX pluggable storage engine                                        |
 | InnoDB             | DEFAULT | Percona-XtraDB, Supports transactions, row-level locking, and foreign keys |
 +--------------------+---------+----------------------------------------------------------------------------+
 10 rows in set (0.05 sec)
 
 MariaDB [(none)]> select found_rows();
 +--------------+
 | found_rows() |
 +--------------+
 |           10 |
 +--------------+
 1 row in set (0.00 sec)

MariaDB [(none)]> use Prueba1;
Database changed
MariaDB [Prueba1]> show tables;
+-------------------+
| Tables_in_Prueba1 |
+-------------------+
| Competiciones     |
| Cursos            |
| Est_fruta         |
| Inv_fruta         |
| Log               |
| Usuarios          |
| color             |
| fruta             |
| inven             |
| personas          |
| t1                |
+-------------------+
11 rows in set (0.02 sec)

MariaDB [Prueba1]> SELECT SQL_CALC_FOUND_ROWS * FROM Cursos limit 3;
+----+------------+
| ID | Nombre     |
+----+------------+
|  1 | HTML5      |
|  2 | CSS3       |
|  3 | JavaScript |
+----+------------+
3 rows in set (0.00 sec)

MariaDB [Prueba1]> select FOUND_ROWS();
+--------------+
| FOUND_ROWS() |
+--------------+
|            6 |
+--------------+
1 row in set (0.00 sec)

== LAST_INSERT_ID ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

</syntaxhighlight>

== ROW_COUNT ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

</syntaxhighlight>

== SCHEMA ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

</syntaxhighlight>

== SESSION_USER ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

</syntaxhighlight>

== USER ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

</syntaxhighlight>

== VERSION ==

<syntaxhighlight lang="sql" line="GESHI_FANCY_LINE_NUMBERS">

</syntaxhighlight>

[[Category:MariaDB Desde la Consola]]
[[Category: CursoMatiaDB]]
