__NOTOC__
* [[:#print-3.py | print-3.py]]
** [[:#Resultado | Resultado]]
** [[:#Explicación | Explicación]]

== print-3.py ==

<syntaxhighlight lang="python" line="GESHI_FANCY_LINE_NUMBERS">

#!/usr/bin/python3
#-*-coding: utf-8 -*-

nombre = "RRC"    # Asignar la cadena RRC a la variable nombre
resultado = 98    # Asignar el intero 98 a la variable resultado

print( "               print() usando substitución con %( )" )
print( "El resultado total para %s es %s  " % (nombre, resultado) )
print()

print( "               print() usando una lista de literales y variables" )
print( "El resultado total para", nombre, "es", resultado )
print()
# print() agrega un espacio después de imprimir cada elemento de la lista

print( "               print() usando una lista de literales y variables" )
print( "               con sep igual a NULL" )
print( "El resultado total para ", nombre, " es ", resultado, sep='' )
print()

print( "               print() usando concatenación con el operador +" )
print( "El resultado total para " + nombre + " es " + str(resultado) )
# print() no va a convertir, promover o degradar un intero a una cadena
# entonces DEBE usar str( ) para convertirlo


</syntaxhighlight>

=== Resultado ===

[rrc@Llawyr PythonClase]$ ./print-3.py
               print() usando substitución con %( )
 El resultado total para RRC es 98  

               print() usando una lista de literales y variables
 El resultado total para RRC es 98

               print() usando una lista de literales y variables
               con sep igual a NULL
 El resultado total para RRC es 98

               print() usando concatenación con el operador +
 El resultado total para RRC es 98

=== Explicación ===


[[Category:Programación en Python]]
[[Category:PythonCabal]]
[[Category:CursoPython]]
